/* ver.1 - 브루트 포스
(1) 시간 초과.
    지금까지 순열 문제를 풀어본 적이 없어서(1722번 풀기 전임) 그냥 모든 순열을 순서대로 출력하면 되는 줄 알았는데 아니었다.
    이제 수학 문제로 넘어갈 시간 -> ver2
*/

import java.util.*;

public class Main {
    static int n;
    static int k;
    static int method;
    static boolean[] visited;
    static int[] permutation;
    static int[] findPermutation;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        method = sc.nextInt();

        visited = new boolean[n];
        permutation = new int[n];

        if(method == 1) {
            k = sc.nextInt();
            printResultPermutation(0);
        }
        else{
            findPermutation = new int[n];
            for(int i=0; i<n; i++){
                findPermutation[i] = sc.nextInt();
            }
            k = 0;
            printResultSequence(0);
        }
    }

    private static void printResultPermutation(int depth){
        for(int i=0; i<n; i++){
            if(!visited[i]) {
                permutation[depth] = i+1;
                if(depth == n-1) {
                    if(--k == 0) {
                        print(permutation);
                        System.exit(0);
                    }
                    return;
                }
                visited[i] = true;
                printResultPermutation(depth+1);
                visited[i] = false;
            }
        }
    }

    private static void printResultSequence(int depth){
        for(int i=0; i<n; i++){
            if(!visited[i]) {
                permutation[depth] = i+1;
                if(depth == n-1){
                    k++;
                    if(Arrays.equals(permutation, findPermutation)){
                        System.out.println(k);
                        System.exit(0);
                    }
                    return;
                }
                visited[i] = true;
                printResultSequence(depth+1);
                visited[i] = false;
            }
        }
    }

    private static void print(int[] permutation) {
        for (int j : permutation) {
            System.out.print(j + " ");
        }
    }
}



/* ver.2
*/

